{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "functionAppName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Function application and prefix for a few cloud katana resources such as Azure AD applications and managed identity"
            }
        },
        "identityId": {
            "type": "string",
            "metadata": {
                "description": "Id of the managed identity to create Azure AD applications used by cloud katana to expose its API and enable Azure AD authentication and authorization. Format: /subscriptions/SUBSCRIPTIONID/resourcegroups/GROUP/providers/Microsoft.ManagedIdentity/userAssignedIdentities/IDENTITYNAME"
            }
        },
        "assignAppRoleToUser": {
            "type": "string",
            "metadata": {
                "description": "First authorized user to access and use Cloud Katana"
            }
        },
        "_resourceNames": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Predefined resource names. Should be set to default. The value is passed when the template is integrated into a complex pipeline."
            }
        },
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        },
        "roleGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of Cloud Katana scripts and configs to deploy the serverless application"
            },
            "defaultValue": "https://raw.githubusercontent.com/Azure/Cloud-Katana/main"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation (GITHUB_REPO_OR_STORAGE_ACCOUNT). Leave it blank unless you need to provide your own value."
            },
            "defaultValue": ""
        },
        "_packageLocation": {
            "type": "securestring",
            "metadata": {
                "description": "The remote location of the Cloud Katana Azure Function app package. By default this points to the Cloud Katana public GitHub repository. You can update this and point to a private location. You can use a Shared Access Signature (SAS)."
            },
            "defaultValue": "https://github.com/Azure/Cloud-Katana/blob/main/CloudKatana.zip?raw=true"
        },
        "enableHybridMode": {
            "type": "bool",
            "defaultValue": false
        },
        "automationAccountName": {
            "type": "string",
            "defaultValue": ""
        },
        "automationAccountResourceGroupName": {
            "type": "string",
            "defaultValue": ""
        },
        "hybridWorkerGroupName": {
            "type": "string",
            "defaultValue": ""
        },
        "hybridPowerShellRunbookName": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "combinedResourceNames": {
            "AppName": "[tolower(parameters('functionAppName'))]",
            "Identity": "[concat(parameters('functionAppName'), 'Identity')]",
            "ServerAppName": "[concat(parameters('functionAppName'), 'Server')]",
            "ClientAppName": "[concat(parameters('functionAppName'), 'Client')]"
        },
        "resourceNames": "[if(empty(parameters('_resourceNames')), variables('combinedResourceNames'), parameters('_resourceNames'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "createServerApp",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[parameters('identityId')]": {}
                }
            },
            "kind": "AzurePowerShell",
            "properties": {
                "forceUpdateTag": "[parameters('utcValue')]",
                "azPowerShellVersion": "6.2",
                "timeout": "PT30M",
                "scriptContent": "[format('. .\\New-AppRegistration.ps1; $results = New-AppRegistration -Name {0} -IdentifierUris {1} -ReplyUrls {2} -RequireAssignedRole -AssignAppRoleToUser {3} -ConnectAs ManagedIdentity; $DeploymentScriptOutputs[\"appId\"] = $results.appId', variables('resourceNames').ServerAppName, concat('api://',subscription().tenantId,'/cloudkatana'), concat('https://', variables('resourceNames').AppName, '.azurewebsites.net/.auth/login/aad/callback'), parameters('assignAppRoleToUser'))]",
                "supportingScriptUris": [
                    "[concat(parameters('artifactsLocation'), '/resources/scripts/New-AppRegistration.ps1', parameters('_artifactsLocationSasToken'))]"
                ],
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "PT1H"
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "createClientApp",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[parameters('identityId')]": {}
                }
            },
            "kind": "AzurePowerShell",
            "properties": {
                "forceUpdateTag": "[parameters('utcValue')]",
                "azPowerShellVersion": "6.2",
                "timeout": "PT30M",
                "scriptContent": "[format('. .\\New-AppRegistration.ps1; $results = New-AppRegistration -Name {0} -NativeApp -RequireAssignedRole -AssignAppRoleToUser {1} -ConnectAs ManagedIdentity; $DeploymentScriptOutputs[\"appId\"] = $results.appId', variables('resourceNames').ClientAppName, parameters('assignAppRoleToUser'))]",
                "supportingScriptUris": [
                    "[concat(parameters('artifactsLocation'), '/resources/scripts/New-AppRegistration.ps1', parameters('_artifactsLocationSasToken'))]"
                ],
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "PT1H"
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[variables('resourceNames').Identity]",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "sleep",
            "dependsOn": [ "[variables('resourceNames').Identity]" ],
            "location": "[resourceGroup().location]",
            "kind": "AzurePowerShell",
            "properties": {
                "forceUpdateTag": "[parameters('utcValue')]",
                "azPowerShellVersion": "6.2",
                "timeout": "PT30M",
                "scriptContent": "Start-Sleep -Seconds 10",
                "supportingScriptUris": [],
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "PT1H"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2019-04-01-preview",
            "name": "[parameters('roleGuid')]",
            "dependsOn": ["[concat('Microsoft.Resources/deploymentScripts/', 'sleep')]"],
            "properties": {
                "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(variables('resourceNames').Identity, '2018-11-30').principalId]",
                "principalType": "ServicePrincipal",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "grantGraphPermissions",
            "dependsOn": ["[concat('Microsoft.Authorization/roleAssignments/', parameters('roleGuid'))]"],
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[parameters('identityId')]": {}
                }
            },
            "kind": "AzurePowerShell",
            "properties": {
                "forceUpdateTag": "[parameters('utcValue')]",
                "azPowerShellVersion": "6.2",
                "timeout": "PT30M",
                "scriptContent": "[format('. .\\Grant-GraphPermissions.ps1; Grant-GraphPermissions -SvcPrincipalId {0} -PermissionsFile .\\permissions.json -ConnectAs ManagedIdentity', reference(variables('resourceNames').Identity, '2018-11-30').principalId)]",
                "supportingScriptUris": [
                    "[concat(parameters('artifactsLocation'), '/resources/scripts/Grant-GraphPermissions.ps1', parameters('_artifactsLocationSasToken'))]",
                    "[concat(parameters('artifactsLocation'), '/metadata/permissions.json', parameters('_artifactsLocationSasToken'))]"
                ],
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "PT1H"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "deployFunctionApp",
            "dependsOn": [ 
                "createServerApp",
                "grantGraphPermissions"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('artifactsLocation'), '/resources/templates/functionApp.json' , parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serverAppId": {
                        "value": "[reference('createServerApp').outputs.appId]"
                    },
                    "identityName": {
                        "value": "[variables('resourceNames').Identity]"
                    },
                    "functionAppName": {
                        "value": "[variables('resourceNames').AppName]"
                    },
                    "_packageLocation": {
                        "value": "[parameters('_packageLocation')]"
                    },
                    "enableHybridMode": {
                        "value": "[parameters('enableHybridMode')]"
                    },
                    "automationAccountName": {
                        "value": "[parameters('automationAccountName')]"
                    },
                    "automationAccountResourceGroupName": {
                        "value": "[parameters('automationAccountResourceGroupName')]"
                    },
                    "hybridWorkerGroupName": {
                        "value": "[parameters('hybridWorkerGroupName')]"
                    },
                    "hybridPowerShellRunbookName": {
                        "value": "[parameters('hybridPowerShellRunbookName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2019-04-01-preview",
            "name": "[parameters('roleGuid')]",
            "dependsOn": ["[concat('Microsoft.Resources/deploymentScripts/', 'sleep')]"],
            "properties": {
                "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', 'f353d9bd-d4a6-484e-a77a-8050b599b867')]",
                "principalId": "[reference(variables('resourceNames').AppName, '2018-11-30').principalId]",
                "principalType": "ServicePrincipal",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2019-04-01-preview",
            "name": "[parameters('roleGuid')]",
            "dependsOn": ["[concat('Microsoft.Resources/deploymentScripts/', 'sleep')]"],
            "properties": {
                "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]",
                "principalId": "[reference(variables('resourceNames').AppName, '2018-11-30').principalId]",
                "principalType": "ServicePrincipal",
                "scope": "[resourceGroup().id]"
            }
        }
    ],
    "outputs": {
        "functionAppName": {
            "type": "string",
            "value": "[variables('resourceNames').AppName]"
        },
        "identityName": {
            "type": "string",
            "value": "[variables('resourceNames').Identity]"
        },
        "serverAppName": {
            "type": "string",
            "value": "[variables('resourceNames').ServerAppName]"
        },
        "serverAppId": {
            "type": "string",
            "value": "[reference('createServerApp').outputs.appId]"
        },
        "clientAppName": {
            "type": "string",
            "value": "[variables('resourceNames').ClientAppName]"
        },
        "clientAppId": {
            "type": "string",
            "value": "[reference('createClientApp').outputs.appId]"
        }
    }
}